.. raw:: html
    
	 <style> .font {font-family:'Consolas'; font-size:13pt} </style>

.. role:: font

.. _user manual file: https://github.com/nexus-lab/ezsetup/wiki/User-Guide

========================
Vulnerability Discovery
========================

Introduction
-------------

**Lab Description**: Vulnerability discovery (or vulnerability scanning) is one of the most important parts of proactive defense. With regular and periodical vulnerability scan, system and network weaknesses can be identified in advance and many security incidents can thus be avoided. In this lab, you will learn to use vulnerability scanning tools to collect and identify the operating system (OS) information and the system vulnerabilities of a Linux server. You will learn the basic usage of Nmap on port scanning, service, and OS detection, as well as advanced usages such as using Nmap scripts to detect the vulnerability. You will also learn how to use OpenVAS Web GUI to conduct a comprehensive vulnerability scan.

**Lab Objectives**: Upon completing this lab, students should be able to:

* Learn the basic use of Nmap on host reconnaissance
* Learn how to use Nmap and OpenVAS to detect host vulnerability
* Gain a comprehensive knowledge in vulnerability scanning
* Understand the difference between Nmap and OpenVAS scan

**Required Knowledge:**
Students are required to have the following prerequisite knowledge for this lab:

#. The usage of the text-based terminal and basic Linux commands.
#. Knowledge of accessing a remote Linux server using SSH.
#. Basic understanding of common system and network vulnerabilities.

**Background:**

 **EZSetup** is a novel Web application capable of creating a variety of user-defined cybersecurity practice enviornments (e.g., labs and competition scenarios)EZSetup provides a Web user interface for practice designers to create a practice scenario by dragging and dropping icons visually and the links between them thus allows for customization and significantly reduces overhead in creating and using practice environments. Completely spared from the complexity of creating practice environments, end users can jump right in and fully concentrate on cybersecurity practice.
 
 For more information about EZSetup, please see bundled `user manual file`_.
  
 **Secure Shell(SSH)** is a network protocol that allows data to be exchanged over a secure channel between two computers. Encryption provides confidentiality and integrity of data. SSH uses public-key cryptography to authenticate the remote computer and allow the remote computer to authenticate the user, if necessary. 
 
 For more information about SSH, please see `<https://wiki.archlinux.org/index.php/Secure_Shell>`_.
 
 **Nmap** (Network Mapper) is a free and open-source security scanner, originally written by Gordon Lyon (also known by his pseudonym Fyodor Vaskovich), used to discover hosts and services on a computer network, thus building a "map" of the network. To accomplish its goal, Nmap sends specially crafted packets to the target host(s) and then analyzes the responses. 
 
 For more information about Nmap, please see `<https://nmap.org/book/man.html>`_.
 
 **OpenVAS** (Open Vulnerability Assessment System, originally known as GNessUs) is a software framework of several services and tools offering vulnerability scanning and vulnerability management. All OpenVAS products are free software, and most components are licensed under the GNU General Public License (GPL). Plugins for OpenVAS are written in the Nessus Attack Scripting Language, NASL. 
 
 For more information about OpenVAS, please see `<https://docs.greenbone.net/#user_documentation>`_.

**Lab Environment**
In this lab, students can access two virtual machines (VM) in the cloud from EZSetup. One acts as the scanner, equipped with OpenVAS and Nmap vulnerability scanners, and the other one is a vulnerable machine with a lot of vulnerabilities. The network topology for this lab is provided below in **Figure 1**.

.. figure:: /xie/media/vuln_media/lab/fig_1.png
	:alt: alternate text
	:figclass: align-center

	**Figure 1**

The access information about these two virtual machines is provided in below **Table 1**. Please refer to the EZSetup dashboard for the actual public IP addresses and passwords.

.. list-table:: **Table 1** VM properties and access information
   :header-rows: 1

   * - Name
     - Image
     - RAM
     - VCPU
     - Disk
     - Login Account
   * - Scanner
     - vulscan-scanner
     - 1GB
     - 1
     - 30GB
     - See EZSetup
   * - Vulnerable
     - vulscan-vulnerable
     - 1GB
     - 1
     - 30GB
     - See EZSetup

Task 1: Network and Host Scan Using Nmap
----------------------------------------

**Nmap** (Network Mapper) is a free and open-source utility for network discovery and security auditing. It is widely used during the initial stages of penetration testing. Nmap can be used for displaying exposed ports or services on a target machine along with other useful information such as the MAC address and OS detection.

To scan the entire network, the following command can be used. ::
	
	nmap -sP 192.168.1.0/24

Here ``-sP`` refers to Nmap ping scan and this command will return all live hosts in the network. To conduct an Nmap TCP scan against the Vulnerable VM, the following command can be used. ::
	
	nmap -sT 192.168.1.20

Here ``-sT`` refers to Nmap TCP connect port scan and all the open TCP ports will be displayed by issuing the above command. For remote OS detection, ``-O`` option can be used, for instance, ::
	
	nmap -O 192.168.1.20

One thing needs to note for the above command is that **root privilege** is usually required in order to get the remote OS information, thus ``sudo`` is needed before typing nmap. To detect the services running on the target machine, ``-sV`` option can be utilized, for example, ::

	nmap -sV 192.168.1.20

The above command will return the information about the services running on the Vulnerable VM as well as their version information. These will help administrators to identify possible vulnerabilities in it.


Lab Exercise 1
~~~~~~~~~~~~~~

Scan the network and get the detailed information of the Vulnerable VM using Nmap tool on the Scanner VM.

 #. Use Nmap quick ping scan to identify any live hosts in the network 192.168.1.0/24 and then list them here.
 
 #. Use Nmap TCP scan against the Vulnerable VM to get its open TCP ports. List the command and results here.
 
 #. Identify the version of Linux that the Vulnerable VM is running on using Nmap operating system scan command.
 
 #. Detect the services along with their version numbers running on the Vulnerable VM and list the result here. Identify any vulnerable services by checking the detected service (software) version on national vulnerability database `<https://nvd.nist.gov>`_.


Task 2: Script scan with Nmap
-----------------------------

Nmap Scripting Engine (NSE) is one of Nmap's most powerful and flexible features. It allows users to write (and share) simple scripts to automate a wide variety of complex networking tasks, e.g., with NSE, we can launch more sophisticated service version detection, handle more demanding vulnerability checks, detect more complex worms and backdoors, and even exploit vulnerabilities, which are valuable for penetration testers. 

By using ``--script`` option in nmap command, we can easily load any particular script in nmap scan, for instance, ::

	nmap --script=default 192.168.1.20
	
Here ``--script=default`` is equivalent to ``-sC`` option, which enables the most common scripts to do the host-based scan. Different script categories are created to meet different scan purposes, e.g., with ``--script=vuln``, we can load all scripts in the vulnerability scanning category to identify more vulnerabilities. With ``--script=exploit``, we are able to exploit the detected vulnerabilities against a particular machine. 
	

Lab Exercise 2
~~~~~~~~~~~~~~

Advanced vulnerability scanning using Nmap script engine (NSE).

 #. Use Nmap ``-sC`` option to enable the most common scripts to scan against the Vulnerable VM and list the scan result here.
 
 #. Use Nmap ``--script=vuln`` option to load all scripts in vuln category to scan against the Vulnerable VM to get all vulnerabilities of it.
 
 #. Use Nmap exploit script category to have Nmap actively exploit the detected vulnerabilities and post result here


Task 3: Vulnerability Scan with OpenVAS
---------------------------------------

OpenVAS scanner is a comprehensive vulnerability assessment system that can detect security issues in all manner of servers and network devices. OpenVAS is preinstalled on the scanner machine and offers a nice web GUI for easy vulnerability scan. Before we access the OpenVAS web GUI, we need to allow the public IP address as address part of a HTTP host header.

Set ``ALLOW_HEADER_HOST=<Public_IP_Address>`` in ``/etc/default/openvas-gsa`` file. ::

	$ sudo vim openvas-gsa
	
Then, restart the OpenVAS services. ::

	$ sudo systemctl restart openvas-gsa
	$ sudo systemctl restart openvas-scanner
	
After that, we can access the OpenVAS web GUI through the Scanner VMâ€™s public IP address. 

.. note:: OpenVAS runs on port 4000, assuming that the Scanner VM has a public IP address of 172.20.15.134, then the address for accessing the web GUI will be `<https://172.20.15.134:4000>`_.

The default username and password for the OpenVAS web GUI is ``admin`` and ``admin``. After you have successfully logged in, you will be able to see the main interface of OpenVAS. Go to Scans -> Tasks tab to start your vulnerability scan.	


Lab Exercise 3
~~~~~~~~~~~~~~

Scan system vulnerabilities of the Vulnerable VM using OpenVAS

 #. What vulnerabilities can you find on the Vulnerable VM through OpenVAS quick scan option?
 
 #. What is the difference between full and fast scan config and full and very deep scan config? Verify your assumption by showing the scan results against the Vulnerable VM using these two scan configs.
 
 #. How OpenVAS classify the severity of the detected vulnerabilities?
 
 #. Comapre the vulnerability scanning results generated by Nmap and OpenVAS and describe the difference. Then give your insights about why they have such difference.


What To Submit
--------------

Save your answers (with screenshots) to the above questions into a PDF file and name the file as ``vulscan-ans.pdf``.